version: '3.8'

services:
  invisionedmarketing:
    build:
      context: ./invisionedmarketing
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    # volumes:
    #   - ./invisionedmarketing:/app
    #   - /app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - database

  i-creations:
    build:
      context: ./i-creations
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - ./i-creations:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - database
      - python-services

  python-services:
    build:
      context: ./python-services
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./python-services:/app
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - database

  archon:
    build:
      context: ./archon
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./archon:/app
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - database

  camel:
    build:
      context: ./camel
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    volumes:
      - ./camel:/app
    environment:
      - PYTHONUNBUFFERED=1

  owl:
    build:
      context: ./owl
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    volumes:
      - ./owl:/app
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - camel

  database:
    image: postgres:14
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
